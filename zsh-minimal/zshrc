export ZDOTDIR=$HOME
export LANG="en_US.UTF-8"
export EDITOR=vim
export CLICOLOR=1
export HISTFILE=~/.histfile
export HISTSIZE=10000
export SAVEHIST=1000
export WORDCHARS=''
export ENHANCD_DISABLE_DOT=1
export RIPGREP_CONFIG_PATH=~/.ripgrep
export BAT_CONFIG_PATH=~/.bat
export FZF_DEFAULT_COMMAND="rg --files"
export FZF_CTRL_T_COMMAND="rg --files"
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=5'

[ -f ~/.dotfiles/dir_colors/dir_colors ] && eval $(gdircolors ~/.dotfiles/dir_colors/dir_colors)

GO_BINARIES=$HOME/go/bin
HOMEBREW_BINARIES=/usr/local/bin
CARGO_BINARIES=$HOME/.cargo/bin
PERSONAL_BINARIES=$HOME/bin

# Local binaries
export PATH=$PATH:$HOMEBREW_BINARIES:$CARGO_BINARIES:$PERSONAL_BINARIES:$GO_BINARIES

fpath=(/usr/local/share/zsh-completions $fpath)

autoload -Uz compinit && compinit -u
autoload -Uz colors  && colors
autoload -Uz vcs_info

zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:*:*:*:*' menu select

source "$HOME/.dotfiles/zsh-minimal/plugins-static.sh"
source "$HOME/.dotfiles/zsh-minimal/options.zsh"

bindkey -e
bindkey "[3~" delete-char
bindkey "^[[3~" delete-char
bindkey "^[3;5~" delete-char
bindkey "\e[3~" delete-char

# [Backspace] - delete backward
bindkey '^?' backward-delete-char
bindkey '^w' backward-kill-word

# [Ctrl-RightArrow] - move forward one word
bindkey '^[[1;5C' forward-word

# [Ctrl-LeftArrow] - move backward one word
bindkey '^[[1;5D' backward-word

zstyle :compinstall filename "$HOME/.zshrc"

alias vim="nvim"
alias vi="nvim"
alias ls="exa -l"
alias tf="terraform"
alias bex="bundle exec"
alias typora="open -a typora"

# Node env
eval "$(nodenv init -)"

# Ruby
eval "$(rbenv init -)"

# Direnv hooking
eval "$(direnv hook zsh)"

# Kiex
[ -f ~/.kiex/scripts/kiex ] && source "$HOME/.kiex/scripts/kiex"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Themeing with starship
eval "$(starship init zsh)"

rg() {
  if [ -t 1 ]; then
    command rg -p "$@" | less -RFX
  else
    command rg "$@"
  fi
}

c() {
  IN_REPO=$(command git rev-parse --is-inside-work-tree 2&> /dev/null)
  if [ "$IN_REPO" = "true" ]; then
    builtin cd -q $(command git root)
  fi
}

set_title() {
    if [ -z "$TMUX" ]; then
      echo -ne "\033]0;"$*"\007"
    else
      tmux rename-window $*
    fi
}

title() {
 IN_REPO=$(command git rev-parse --is-inside-work-tree 2&> /dev/null)
  if [ "$IN_REPO" = "true" ]; then
    PATH_IN_GIT=$(command git root)
    set_title $(basename $PATH_IN_GIT)
  else
    set_title $(basename $PWD)
  fi
}

chpwd_functions+=title

title

mkcd() {
  mkdir $1;
  cd $1;
}

font_size() {
  sd 'size: [\d\.]+' "size: $1" ~/.config/alacritty/alacritty.yml
}

presentation_mode() {
  font_size 24
}

normal_mode() {
  font_size 16
}

laptop_mode() {
  font_size 14
}

dots() {
  cd ~/.dotfiles
}

watchy() {
 watchexec --clear -- "if $1; then noti -m ✅; else noti -m ❌; fi"
}

if [[ -f "$HOME/.custom-client-functions" ]]; then
  source "$HOME/.custom-client-functions";
fi
